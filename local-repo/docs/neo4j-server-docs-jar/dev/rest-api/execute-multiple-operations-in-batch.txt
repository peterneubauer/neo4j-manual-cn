[[rest-api-execute-multiple-operations-in-batch]]
=== Execute multiple operations in batch ===

This lets you execute multiple API calls through a single HTTP call,
significantly improving performance for large insert and update
operations.

The batch service expects an array of job descriptions as input, each job
description describing an action to be performed via the normal server
API.

This service is transactional. If any of the operations performed fails
(returns a non-2xx HTTP status code), the transaction will be rolled back
and all changes will be undone.

Each job description should contain a +to+ attribute, with a value
relative to the data API root (so http://localhost:7474/db/data/node becomes
just /node), and a +method+ attribute containing HTTP verb to use.

Optionally you may provide a +body+ attribute, and an +id+ attribute to
help you keep track of responses, although responses are guaranteed to be
returned in the same order the job descriptions are received.

The following figure outlines the different parts of the job
descriptions:

image::batch-request-api.png[]


.Final Graph
["dot", "Final-Graph-Execute-multiple-operations-in-batch.svg", "neoviz", ""]
----
  N26 [
    label = "{Node\[26\]|name = \'John\'\l}"
  ]
  N27 [
    label = "{Node\[27\]|age = 1\l}"
  ]
  N27 -> N26 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "knows\n"
  ]
  N28 [
    label = "{Node\[28\]|age = 1\l}"
  ]
  N29 [
    label = "{Node\[29\]|age = 1\l}"
  ]
----

_Example request_

* *+POST+*  +http://localhost:7474/db/data/batch+
* *+Accept:+* +application/json+
* *+Content-Type:+* +application/json+
[source,javascript]
----
[ {
  "method" : "PUT",
  "to" : "/node/27/properties",
  "body" : {
    "age" : 1
  },
  "id" : 0
}, {
  "method" : "GET",
  "to" : "/node/27",
  "id" : 1
}, {
  "method" : "POST",
  "to" : "/node",
  "body" : {
    "age" : 1
  },
  "id" : 2
}, {
  "method" : "POST",
  "to" : "/node",
  "body" : {
    "age" : 1
  },
  "id" : 3
} ]
----


_Example response_

* *+200:+* +OK+
* *+Content-Type:+* +application/json+
[source,javascript]
----
[ {
  "id" : 0,
  "from" : "/node/27/properties"
}, {
  "id" : 1,
  "body" : {
    "extensions" : {
    },
    "paged_traverse" : "http://localhost:7474/db/data/node/27/paged/traverse/{returnType}{?pageSize,leaseTime}",
    "outgoing_relationships" : "http://localhost:7474/db/data/node/27/relationships/out",
    "traverse" : "http://localhost:7474/db/data/node/27/traverse/{returnType}",
    "all_typed_relationships" : "http://localhost:7474/db/data/node/27/relationships/all/{-list|&|types}",
    "all_relationships" : "http://localhost:7474/db/data/node/27/relationships/all",
    "property" : "http://localhost:7474/db/data/node/27/properties/{key}",
    "self" : "http://localhost:7474/db/data/node/27",
    "outgoing_typed_relationships" : "http://localhost:7474/db/data/node/27/relationships/out/{-list|&|types}",
    "properties" : "http://localhost:7474/db/data/node/27/properties",
    "incoming_relationships" : "http://localhost:7474/db/data/node/27/relationships/in",
    "incoming_typed_relationships" : "http://localhost:7474/db/data/node/27/relationships/in/{-list|&|types}",
    "create_relationship" : "http://localhost:7474/db/data/node/27/relationships",
    "data" : {
      "age" : 1
    }
  },
  "from" : "/node/27"
}, {
  "id" : 2,
  "location" : "http://localhost:7474/db/data/node/28",
  "body" : {
    "extensions" : {
    },
    "paged_traverse" : "http://localhost:7474/db/data/node/28/paged/traverse/{returnType}{?pageSize,leaseTime}",
    "outgoing_relationships" : "http://localhost:7474/db/data/node/28/relationships/out",
    "traverse" : "http://localhost:7474/db/data/node/28/traverse/{returnType}",
    "all_typed_relationships" : "http://localhost:7474/db/data/node/28/relationships/all/{-list|&|types}",
    "all_relationships" : "http://localhost:7474/db/data/node/28/relationships/all",
    "property" : "http://localhost:7474/db/data/node/28/properties/{key}",
    "self" : "http://localhost:7474/db/data/node/28",
    "outgoing_typed_relationships" : "http://localhost:7474/db/data/node/28/relationships/out/{-list|&|types}",
    "properties" : "http://localhost:7474/db/data/node/28/properties",
    "incoming_relationships" : "http://localhost:7474/db/data/node/28/relationships/in",
    "incoming_typed_relationships" : "http://localhost:7474/db/data/node/28/relationships/in/{-list|&|types}",
    "create_relationship" : "http://localhost:7474/db/data/node/28/relationships",
    "data" : {
      "age" : 1
    }
  },
  "from" : "/node"
}, {
  "id" : 3,
  "location" : "http://localhost:7474/db/data/node/29",
  "body" : {
    "extensions" : {
    },
    "paged_traverse" : "http://localhost:7474/db/data/node/29/paged/traverse/{returnType}{?pageSize,leaseTime}",
    "outgoing_relationships" : "http://localhost:7474/db/data/node/29/relationships/out",
    "traverse" : "http://localhost:7474/db/data/node/29/traverse/{returnType}",
    "all_typed_relationships" : "http://localhost:7474/db/data/node/29/relationships/all/{-list|&|types}",
    "all_relationships" : "http://localhost:7474/db/data/node/29/relationships/all",
    "property" : "http://localhost:7474/db/data/node/29/properties/{key}",
    "self" : "http://localhost:7474/db/data/node/29",
    "outgoing_typed_relationships" : "http://localhost:7474/db/data/node/29/relationships/out/{-list|&|types}",
    "properties" : "http://localhost:7474/db/data/node/29/properties",
    "incoming_relationships" : "http://localhost:7474/db/data/node/29/relationships/in",
    "incoming_typed_relationships" : "http://localhost:7474/db/data/node/29/relationships/in/{-list|&|types}",
    "create_relationship" : "http://localhost:7474/db/data/node/29/relationships",
    "data" : {
      "age" : 1
    }
  },
  "from" : "/node"
} ]
----


