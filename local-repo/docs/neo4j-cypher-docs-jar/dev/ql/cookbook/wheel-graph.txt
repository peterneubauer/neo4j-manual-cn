[[cookbook-wheel-graph]]
== Wheel graph ==
This graph is created in a number of steps:
        
- Create a center node.
- Once per element in the range, create a leaf and connect it to the center.
- Select 2 leafs from the center node and connect them.
- Find the minimum and maximum leaf and connect these.
- Return the id of the center node.

_Query_

[source,cypher]
----
CREATE center
foreach( x in range(1,6) :

CREATE leaf={count:x}, center-[:X]->leaf
)
==== center ====
MATCH large_leaf<--center-->small_leaf
WHERE large_leaf.count = small_leaf.count + 1
CREATE small_leaf-[:X]->large_leaf

==== center, min(small_leaf.count) as min, max(large_leaf.count) as max ====
MATCH first_leaf<--center-->last_leaf
WHERE first_leaf.count = min AND last_leaf.count = max
CREATE last_leaf-[:X]->first_leaf

RETURN id(center) as id
----


The query returns the id of the center node.

.Result
[queryresult]
----
+----+
| id |
+----+
| 1  |
+----+
1 row
Nodes created: 7
Relationships created: 12
Properties set: 6
12 ms

----



.Try this query live
[console]
----
start n=node(*) match n-[r?]->() delete n, r;

CREATE center
foreach( x in range(1,6) : 
   CREATE leaf={count:x}, center-[:X]->leaf
)
==== center ====
MATCH large_leaf<--center-->small_leaf
WHERE large_leaf.count = small_leaf.count + 1
CREATE small_leaf-[:X]->large_leaf

==== center, min(small_leaf.count) as min, max(large_leaf.count) as max ====
MATCH first_leaf<--center-->last_leaf
WHERE first_leaf.count = min AND last_leaf.count = max
CREATE last_leaf-[:X]->first_leaf

RETURN id(center) as id
----

