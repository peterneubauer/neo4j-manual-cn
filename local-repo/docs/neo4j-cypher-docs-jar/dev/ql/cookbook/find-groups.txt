[[cookbook-find-groups]]
== Find Groups ==
To find out in what roles a user is for a particular groups (here
        'Group2'), the following query can traverse this HyperEdge node and
        provide answers.

_Query_

[source,cypher]
----
START n=node:node_auto_index(name = "User1")
MATCH n-[:hasRoleInGroup]->hyperEdge-[:hasGroup]->group, hyperEdge-[:hasRole]->role
WHERE group.name = "Group2"
RETURN role.name
----


The role of +User1+ is returned:

.Result
[queryresult]
----
+-----------+
| role.name |
+-----------+
| "Role1"   |
+-----------+
1 row
0 ms

----



.Try this query live
[console]
----
(1) {"name":"U1G2R1"}
(2) {"name":"Role2"}
(3) {"name":"Group1"}
(4) {"name":"Group2"}
(5) {"name":"Role1"}
(6) {"name":"Role"}
(7) {"name":"User1"}
(8) {"name":"U1G1R2"}
(9) {"name":"Group"}
(1)-[:hasRole]->(5) {}
(1)-[:hasGroup]->(4) {}
(2)-[:isA]->(6) {}
(3)-[:canHave]->(5) {}
(3)-[:canHave]->(2) {}
(3)-[:isA]->(9) {}
(4)-[:canHave]->(2) {}
(4)-[:canHave]->(5) {}
(4)-[:isA]->(9) {}
(5)-[:isA]->(6) {}
(7)-[:in]->(3) {}
(7)-[:in]->(4) {}
(7)-[:hasRoleInGroup]->(1) {}
(7)-[:hasRoleInGroup]->(8) {}
(8)-[:hasRole]->(2) {}
(8)-[:hasGroup]->(3) {}


start n=node:node_auto_index(name = "User1") match n-[:hasRoleInGroup]->hyperEdge-[:hasGroup]->group, hyperEdge-[:hasRole]->role where group.name = "Group2" return role.name
----

