[[match-shortest-path]]
== Shortest path ==
Finding a single shortest path between two nodes is as easy as using the `shortestPath` function. It's done like this:

_Query_

[source,cypher]
----
START d=node(1), e=node(2)
MATCH p = shortestPath( d-[*..15]->e )
RETURN p
----


This means: find a single shortest path between two nodes, as long as the path is max 15 relationships long. Inside of the parenthesis
 you define a single link of a path -- the starting node, the connecting relationship and the end node. Characteristics describing the relationship
 like relationship type, max hops and direction are all used when finding the shortest path. You can also mark the path as optional.

.Result
[queryresult]
----
+------------------------------------------------------------------------------------------------------------------------------------+
| p                                                                                                                                  |
+------------------------------------------------------------------------------------------------------------------------------------+
| [Node[1]{name:"David"},:KNOWS[2] {},Node[3]{name:"Anders"},:KNOWS[0] {},Node[4]{name:"Bossman"},:KNOWS[3] {},Node[2]{name:"Emil"}] |
+------------------------------------------------------------------------------------------------------------------------------------+
1 row
0 ms

----



.Try this query live
[console]
----
(1) {"name":"David"}
(2) {"name":"Emil"}
(3) {"name":"Anders"}
(4) {"name":"Bossman"}
(5) {"name":"Cesar"}
(1)-[:KNOWS]->(3) {}
(3)-[:KNOWS]->(4) {}
(3)-[:BLOCKS]->(5) {}
(4)-[:KNOWS]->(2) {}
(4)-[:BLOCKS]->(1) {}
(5)-[:KNOWS]->(2) {}


start d=node(1), e=node(2) match p = shortestPath( d-[*..15]->e ) return p
----

