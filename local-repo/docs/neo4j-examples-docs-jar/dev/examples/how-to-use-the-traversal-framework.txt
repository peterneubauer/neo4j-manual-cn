[[examples-how-to-use-the-traversal-framework]]
How to use the Traversal framework
==================================

In contrary to
http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/Node.html#traverse[Node#traverse] a
http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/TraversalDescription.html[traversal description] is built (using a
fluent interface) and such a description can spawn
http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/Traverser.html[traversers].

.Traversal Example Graph
["dot", "Traversal-Example-Graph-how-to-use-the-Traversal-framework.svg", "neoviz", ""]
----
  N1 [
    label = "{Node\[1\]|name = \'Lars\'\l}"
  ]
  N1 -> N6 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
  N2 [
    label = "{Node\[2\]|name = \'Sara\'\l}"
  ]
  N3 [
    label = "{Node\[3\]|name = \'Ed\'\l}"
  ]
  N3 -> N1 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
  N4 [
    label = "{Node\[4\]|name = \'Lisa\'\l}"
  ]
  N4 -> N7 [
    color = "#4e9a06"
    fontcolor = "#4e9a06"
    label = "LIKES\n"
  ]
  N4 -> N1 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
  N5 [
    label = "{Node\[5\]|name = \'Peter\'\l}"
  ]
  N5 -> N2 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
  N6 [
    label = "{Node\[6\]|name = \'Dirk\'\l}"
  ]
  N6 -> N5 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
  N7 [
    label = "{Node\[7\]|name = \'Joe\'\l}"
  ]
  N7 -> N2 [
    color = "#2e3436"
    fontcolor = "#2e3436"
    label = "KNOWS\n"
  ]
----

With the definition of the +RelationshipTypes+ as

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=sourceRels
----

The graph can be traversed with for example the following traverser, starting at the ``Joe'' node:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=knowslikestraverser
----

The traversal will output:

[source]
----
(7)
(7)<--[LIKES,1]--(4)
(7)<--[LIKES,1]--(4)--[KNOWS,6]-->(1)
(7)<--[LIKES,1]--(4)--[KNOWS,6]-->(1)--[KNOWS,4]-->(6)
(7)<--[LIKES,1]--(4)--[KNOWS,6]-->(1)--[KNOWS,4]-->(6)--[KNOWS,3]-->(5)
(7)<--[LIKES,1]--(4)--[KNOWS,6]-->(1)--[KNOWS,4]-->(6)--[KNOWS,3]-->(5)--[KNOWS,2]-->(2)
(7)<--[LIKES,1]--(4)--[KNOWS,6]-->(1)<--[KNOWS,5]--(3)

----

Since http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/TraversalDescription.html[+TraversalDescription+]s 
are immutable it is also useful to create template descriptions which holds common 
settings shared by different traversals. For example, let's start with this traverser:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=basetraverser
----

This traverser would yield the following output (we will keep starting from the ``Joe'' node):

[source]
----
(7)
(7)--[KNOWS,0]-->(2)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)<--[KNOWS,4]--(1)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)<--[KNOWS,4]--(1)<--[KNOWS,5]--(3)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)<--[KNOWS,4]--(1)<--[KNOWS,6]--(4)

----

Now let's create a new traverser from it, restricting depth to three:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=depth3
----

This will give us the following result:

[source]
----
(7)
(7)--[KNOWS,0]-->(2)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)

----

Or how about from depth two to four?
That's done like this:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=depth4
----

This traversal gives us:

[source]
----
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)
(7)--[KNOWS,0]-->(2)<--[KNOWS,2]--(5)<--[KNOWS,3]--(6)<--[KNOWS,4]--(1)

----

For various useful evaluators, see the 
http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/Evaluators.html[Evaluators] Java API
or simply implement the
http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/Evaluator.html[Evaluator] interface yourself.

If you're not interested in the http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/Path.html[+Path+]s, 
but the http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/Node.html[+Node+]s 
you can transform the traverser into an iterable of http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/Traverser.html#nodes()[nodes]
like this:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=nodes
----

In this case we use it to retrieve the names:

[source]
----
Joe
Sara
Peter
Dirk
Lars
Ed
Lisa

----

http://components.neo4j.org/neo4j/{neo4j-version}/apidocs/org/neo4j/graphdb/traversal/Traverser.html#relationships()[Relationships]
are fine as well, here's how to get them:

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/TraversalExample.java
classifier=sources
tag=relationships
----

Here the relationship types are written, and we get:

[source]
----
KNOWS
KNOWS
KNOWS
KNOWS
KNOWS
KNOWS

----

The source code for the traversers in this example is available at:
https://github.com/neo4j/community/blob/{neo4j-git-tag}/embedded-examples/src/main/java/org/neo4j/examples/TraversalExample.java[TraversalExample.java]


