[[tutorials-java-unit-testing]]
基本的单元测试
==================

Neo4j的单元测试的基本功能将通过下面的范例来阐明。

为了能访问Neo4j的测试功能，我们需要在测试期间新增+neo4j-kernel+的‘tests.jar’到类路径中。
你可以通过从Maven Central: http://search.maven.org/#search|ga|1|g%3A%22org.neo4j%22%20AND%20a%3A%22neo4j-kernel%22[org.neo4j:neo4j-kernel].下载。

如果使用Maven来管理依赖，一般会像下面这样：


.Maven dependency
[source,xml]
--------------------------------------------
<project>
...
 <dependencies>
  <dependency>
   <groupId>org.neo4j</groupId>
   <artifactId>neo4j-kernel</artifactId>
   <version>${neo4j-version}</version>
   <type>test-jar</type>
   <scope>test</scope>
  </dependency>
  ...
 </dependencies>
...
</project>
--------------------------------------------

_+$\{neo4j-version}+是Neo4j期望的版本号。_

下面，我们将开始单元测试。

[TIP]
完整源代码下载：
https://github.com/neo4j/community/blob/{neo4j-git-tag}/embedded-examples/src/test/java/org/neo4j/examples/Neo4jBasicTest.java[Neo4jBasicTest.java]


在每次测试启动之前，先创建数据库：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=beforeTest
----

在测试结束后，我们将关闭数据库：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=afterTest
----

比如一个测试用例，测试在一个事务中，创建节点并检查他们是否被正确创建到图中。

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=unitTest
----

If you want to set configuration parameters at database creation, it's done like this：

[snippet,java]
----
component=neo4j-examples
source=org/neo4j/examples/Neo4jBasicTest.java
classifier=test-sources
tag=startDbWithConfig
----


